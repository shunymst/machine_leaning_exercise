==============================================================================
2016/10/14(金) 第2回
-------------------------------------------　
★準備（Scilabの復習）
M = [1 2 3;4 5 6]
[r c] = size(M)
M = [1 2 3;4 5 6; 7 8 9 ]
[r c] = size(M)
M = [1 2 3;4 5 6; 7 8 9 ] //行列
[r c] = size(M) //size
M(1, :) //1gyoume
M(2, :) //2gyoume
M(:, 2) //2retsume
M(2, 2) //2retsume 2gyoume
zeros(2,3) //all 0
zeros(M) //M no size wo dainyu
ones(M) // all 1
eye(M) // naname 1
v1 = [1 1] //vector
v2 = [7 9] //vector
sqrt(sum(v1.^2))//heihoukon
norm(v1)
norm(v1-v2)　★ノルム　ベクトルの長さの概念
[m,p] = min(v1) // which where
disp(a(4))
disp(v1(1))

for i=1:10
disp("hoge")
end

for i=1:10
disp("ans = %3d", i^2)
end


★１－１

clear;
P = [[0,1,1,1,0,..
1,0,0,0,1,..
1,0,0,0,1,..
1,0,0,0,1,..
0,1,1,1,0]',..
[0,0,1,0,0,..
0,0,1,0,0,..
0,0,1,0,0,..
0,0,1,0,0,..
0,0,1,0,0]',..
[0,1,1,1,1,..
1,0,0,1,0,..
0,0,1,0,0,..
0,1,0,0,0,..
1,1,1,1,1]',..
[0,1,1,1,0,..
1,0,0,0,1,..
0,0,1,1,0,..
1,0,0,0,1,..
0,1,1,1,0]',..
[0,0,1,0,0,..
0,1,0,0,0,..
1,0,0,1,0,..
1,1,1,1,1,..
0,0,0,1,0]'];
x = [0,0,0,1,0,..
0,0,0,1,0,..
0,0,0,1,0,..
0,0,0,1,0,..
0,0,0,1,0]';
dist = zeros ();
//for i = 1:5//★5固定になってしまう　動的に対応すべき size(P, 'C')
for i = 1:size(P, 'C')
dist(i) = norm(P( :,i ) - x);//★縦でごそっと
end
[mindist , ans] = min(dist );
disp("Ans = "+string(ans -1))


★1-2
repmat関数
複製してタイル状に貼る関数
a = [1,2,3]
repmat(a,2)
⇒
    1.    2.    3.    1.    2.    3.  
    1.    2.    3.    1.    2.    3.  

forの代わりに
[mindist , ans] = min (sum((P - repmat(x,[1 size(P,'c')])). ^2, 'r'))

上記を分解してみる
min (//最小を取得
	sum(//ベクトル長を取得
			(P - repmat(
				x,[1 size(P,'c')]) //5倍のタイル化
			). ^2 //平方根を求める
			, 'r' //縦合計のオプション
		)
	)

★1-3

やらなかった。

⇒次回
　おそらく
　　平均画素法　　　：平均値　ノイズのムラに弱い　ボケやすい
　　メディアン画素法：中間値　ノイズのムラに強い　ボケにくい
　　の画像のノイズ除去のアルゴリズム実装をScilabで実施
　SIVP、WEKAインストールしておく
